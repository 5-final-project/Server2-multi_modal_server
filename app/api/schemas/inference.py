from pydantic import BaseModel, Field, HttpUrl
from typing import Optional, List, Union

class InferenceInput(BaseModel):
    """
    Schema for the input data for inference.
    Uses form data for file uploads.
    """
    prompt: str = Field(..., description="The main text prompt for the model.")
    system_prompt: Optional[str] = Field(None, description="Optional system prompt to guide the model's behavior.")
    # We'll handle file uploads directly in the endpoint using FastAPI's UploadFile
    # For URLs, we can add fields if needed, but let's start with uploads.
    # image_url: Optional[HttpUrl] = Field(None, description="URL of an image input.")
    # audio_url: Optional[HttpUrl] = Field(None, description="URL of an audio input.")
    # video_url: Optional[HttpUrl] = Field(None, description="URL of a video input.")


class InferenceResponse(BaseModel):
    """
    Schema for the response data from a direct inference call.
    """
    generated_text: str = Field(..., description="The text generated by the model.")
    # Potentially add more details like input tokens, output tokens, latency etc.


class AsyncTaskResponse(BaseModel):
    """
    Schema for the response when a task is queued.
    """
    task_id: str = Field(..., description="The ID of the background task processing the inference request.")
    status: str = Field("PENDING", description="Initial status of the task.")


class TaskStatusResponse(BaseModel):
    """
    Schema for checking the status of a background task.
    """
    task_id: str = Field(..., description="The ID of the background task.")
    status: str = Field(..., description="Current status of the task (e.g., PENDING, STARTED, SUCCESS, FAILURE).")
    result: Optional[Union[InferenceResponse, dict]] = Field(None, description="The result of the task if completed successfully, or error details if failed.")

# You might want separate schemas if input structure varies significantly
# e.g., one for text-only, one for text+image, etc.
# For now, a single flexible input schema combined with file uploads is common.
